System.out.print("Привет, мир!"); 

Задание
Выведи в консоль количество месяцев в году.
System.out.print(12);

Задание
Выведи в консоль «Я начинающий автоматизатор».
System.out.print("Я начинающий автоматизатор");

Задание
Добавь в код команду, чтобы вывести на экран две строки:"Я начинающий автоматизатор Java" и "Через тернии к звёздам".
System.out.print("Я начинающий автоматизатор Java");
System.out.print("Через тернии к звёздам");

Задание
Найди и исправь ошибки в этом коде: обрати внимание на имена переменных.
int londonGreatBritain = 5; 
double bakerStreet221 = 7.5; 

Задание
Объяви переменную salary для хранения зарплаты. Отдельным шагом присвой ей значение 60300.50. В конце напечатай значение salary.
double salary; 
salary=60300.50;
System.out.println(salary);

Задание
Марти Макфлай с помощью машины времени оказался в 1967 году, а потом пропутешествовал на 54 года вперёд. Выведи в консоль, в каком году теперь находится Марти.
int startingYear = 1967;
int travellingYears = 54;
int destinationYear =startingYear + travellingYears;  // сложи значения переменных
System.out.println(destinationYear);

Задание
За неделю на карантине дизайнер Олег 132 минуты смотрел «Офис», 240 минут — «Острые козырьки», 153 минуты — «Очень странные дела» и 255 минут — «Рика и Морти». 
Выведи в консоль, сколько всего часов Олег потратил на просмотр. Вычисления делай сразу внутри команды System.out.println().
System.out.println((132 + 240 + 153 + 255) / 60);

Задание
Измени значение переменной message так, чтобы теперь печаталось только «сообщение».
String message = "сообщение"; 
System.out.println(message);

Задание
После переменной haveANiceDay создай переменную userName и сохрани в ней выдуманное имя пользователя. 
Напечатай имя пользователя после пожелания хорошего дня.
String haveANiceDay = "Хорошего дня!"; 
System.out.println(haveANiceDay);
String userName= "Почтальон Печкин ";
System.out.println(userName);

Задание
Выведи в консоль сообщение из двух частей — "Войди, друг!" и "Дверь открыта.".
String enterFriend = "Войди, друг!";
String doorIsOpen = "Дверь открыта."; 
System.out.println(enterFriend + doorIsOpen);

Задание
Дополни код, чтобы вывести строку: «Войди, друг! Дверь открыта. Да пребудет с тобой сила». Раздели предложения пробелами.
String enterFriend = "Войди, друг!"; 
String doorIsOpen = "Дверь открыта."; 
String mayTheForceBeWithYou = "Да пребудет с тобой сила";
System.out.println(enterFriend + " " + doorIsOpen + " " + mayTheForceBeWithYou);

Задание
Выведи в консоль сообщение "Ваш баланс: ... RUB". Сумму добавь из переменной balance.
int balance = 25000;
System.out.println("Ваш баланс: " + balance + " RUB");

Задача 1. Представь, что ты разрабатываешь приложение, в котором можно заказать беспилотное такси. Чтобы пассажир знал, сколько осталось ехать, нужно сохранить время в переменной.
Создай переменную time типа double и присвой ей значение 0.
double time = 0;

Задача 2. Начинается тестовая поездка: расстояние — 80 км, такси движется с постоянной скоростью 40 км/ч. 
Сохрани расстояние в переменной distance, а скорость — в константе SPEED. Используй тип double.
double time = 0;
double distance = 80;
final double SPEED = 40;

Задача 3. Рассчитай, сколько будет длиться тестовая поездка в минутах. Запиши результат в переменную time и выведи её значение в консоль.
double time = 0;
double distance = 80;
final double SPEED = 40;
time = distance / SPEED * 60;
System.out.println(time);

Задача 4. Добавь сообщение об оставшемся времени: сконкатенируй строку "Старт поездки. Осталось минут: " и значение переменной time.
double time = 0;
double distance = 80;
final double SPEED = 40;
time = distance / SPEED * 60;
System.out.println("Старт поездки. Осталось минут: " + time);

Задание
Научи метод printSpeedOfLight() выводить скорость света: 299792458 м/с. Нужно вывести и число, и единицы измерения.
public void printSpeedOfLight() {
System.out.println("299792458 м/с");
}

Задание
Добавь в метод sayHello строковый параметр name.
Вызывать метод не нужно: когда ты запустишь код, значение подставится в тренажёре автоматически.
public void sayHello(String name) { 
	System.out.println("Привет! Меня зовут " + name);
	System.out.println("Я начинающий автоматизатор");
}

Задание
Вызови метод sayHello и передай в аргумент своё имя.
public void sayHello(String name) { 
	System.out.println("Привет! Меня зовут " + name);
	System.out.println("Я начинающий автоматизатор");
}
sayHello("Sara");

Задание
Объявите метод multiply с двумя параметрами — целыми числами a и b. В теле метода в переменной result сохраните результат их умножения. Метод должен печатать текст: «Результат умножения - <число>».
Вызывать метод не нужно: когда вы запустите код, значение подставится в тренажёре автоматически.
public void multiply(int a, int b){ // продолжите код
		int result= a * b;
  System.out.println("Результат умножения - " + result);
}

Задание
Объяви метод getAgeCar с двумя параметрами: carName и year. Метод должен выводить в консоль: "<марка машины> <год> года выпуска".
Вызывать метод не нужно: когда ты запустишь код, значения подставятся в тренажёре автоматически.
public void getAgeCar(String carName, int year){ 
    System.out.println(carName + " " + year + " года выпуска");
}

Задание
Объяви метод, который будет возвращать сообщение об НДС от стоимости покупки в рублях.
Метод принимает в качестве аргумента стоимость в рублях cost типа double, а возвращает строку «НДС с этой покупки составит N руб.», где N — размер НДС. Рассчитай его в переменной nds типа double: НДС равен 20 процентам от стоимости покупки.
Вызывать метод не нужно: когда ты запустишь код, значение подставится в тренажёре автоматически.
public String getNDSMessage(double cost){
	double nds= cost * 0.2;
return "НДС с этой покупки составит " + nds + " руб.";
}

Задача 1. Допиши метод sayHello, который будет приветствовать студентов на курсе. Он принимает строковый параметр name — имя студента — и выводит в консоль строку Добро пожаловать на курс, имя_студента!. Например, если вызвать sayHello("Чебурашка");, в консоль выведется: Добро пожаловать на курс, Чебурашка!
Вызывать метод не нужно: когда ты запустишь код, значение подставится в тренажёре автоматически.
public void sayHello(String name) {
    System.out.println("Добро пожаловать на курс, " + name + "!");
}


Задача 2. Метод printAverageRating выводит в консоль средний балл студента за три семестра. В него передаются средние оценки, например: printAverageRating(4.8, 4.5, 3.9);.
Допиши метод calculateAverageRating, который будет рассчитывать средний балл за три семестра и возвращать его значение.
Вызывать метод не нужно: когда ты запустишь код, значения подставятся в тренажёре автоматически.
public void printAverageRating(double firstSemesterRating, double secondSemesterRating, double thirdSemesterRating) {
	double averageRating = calculateAverageRating(firstSemesterRating, secondSemesterRating, thirdSemesterRating);
	System.out.println("Средний балл по итогам трёх семестров " + averageRating);
}
	
public double calculateAverageRating(
    double firstSemesterRating, 
    double secondSemesterRating, 
    double thirdSemesterRating
){
    double sum = firstSemesterRating + secondSemesterRating + thirdSemesterRating;
    double averageRating = sum / 3;
    return averageRating;
}

Задание
В приложении прогноза погоды хранятся переменные со средней температурой воздуха на сегодня и завтра. Объяви переменную isColder: пусть она проверяет, будет ли завтра холоднее, чем сегодня. Выведи её на экран.
double todayWeather = 25.5; // погода на сегодня
double tomorrowWeather = 32.3; // погода на завтра
boolean isColder = tomorrowWeather < todayWeather;
System.out.println(isColder);

Задание
Исправь оператор сравнения внутри System.out.println так, чтобы результат стал true. Значение строк менять не нужно.
String samuraiWayIsDifficult = "Труден путь самурая";
System.out.println(samuraiWayIsDifficult  != "Очень труден путь самурая");

Задание
Допиши условие с оператором if внутри метода tastyDiet. Если остался круассан (переменная hasCroissant — true), нужно вывести на экран "Можно съесть круассан!". Вне зависимости от того, есть ли круассан, должно напечататься "Можно съесть яблоко".
public void tastyDiet() {
  boolean hasCroissant = false;
  if (hasCroissant) {
    System.out.println("Можно съесть круассан!");
}
System.out.println("Можно съесть яблоко"); 
}

Задание
Цена путёвки в Италию — 50 000 рублей. Допиши метод isVacationPossible: если в переменной amountOfMoney достаточно денег, чтобы её купить, должно выводиться сообщение: "Ура! Полечу в отпуск!"
public void isVacationPossible(){
    int amountOfMoney = 70000;
	if (amountOfMoney >= 50000) {
    System.out.println("Ура! Полечу в отпуск!");
} 
}

Задание
Программа выводит текст в зависимости от значения переменной amountOfMoney. Исправь код так, чтобы переменная days была видна вне блока if.
int amountOfMoney = 70000;
int days = 10;
if(amountOfMoney >= 50000) {
	System.out.println("Ура! В моём отпуске будет " + days + " дней");
}
System.out.println("Целых "+ days + "! Это так много!"); 

Задание
Допиши программу: если на улице солнечно — значение переменной isSunny истинно, — нужно напечатать: "Не забудь солнцезащитные очки и кепку". Иначе — "Солнцезащитные очки и кепку брать необязательно".
boolean isSunny = true;

if(isSunny) {
  System.out.println("Не забудь солнцезащитные очки и кепку");
} else {
  System.out.println("Солнцезащитные очки и кепку брать необязательно");
}

Задание
В программе выбора еды на ужин сейчас учитывается только свежесть и вид рыбы. Можно добавить ещё одно условие: если на прилавке есть корюшка, нужно проверить, хватит ли тебе денег. 
Сумма денег хранится в переменной amountOfMoney. Если её значение больше 3000 — программа должна напечатать "Покупаем 2 кг рыбы.", иначе — "Покупаем 0,5 кг рыбы.". Используй вложенный if-else.
boolean isFishFresh = true; // свежая ли рыба
boolean isSmelt = false; // есть ли корюшка
int amountOfMoney = 2900; // сумма денег

if (isFishFresh) {
	if (isSmelt) { 
	if (amountOfMoney > 3000) {
    System.out.println("Покупаем 2 кг рыбы.");
} else {
    System.out.println("Покупаем 0,5 кг рыбы.");
} 
	} else {
		System.out.println("Покупаем 1 кг рыбы.");
	}
} else {
	System.out.println("Покупаем мясо.");
}

Задача
Дополни код: если решишь покупать не рыбу, а мясо, нужно проверить, сколько у тебя денег. Если значение amountOfMoney меньше 750, должно напечататься "Покупаем курицу.", иначе — "Покупаем говядину.".
boolean isFishFresh = true;
boolean isSmelt = false;
int amountOfMoney = 2900;

if (isFishFresh) {
  if (isSmelt) { 
		if (amountOfMoney > 3000) {
			System.out.println("Покупаем 2 кг рыбы.");
		} else {
			System.out.println("Покупаем 0,5 кг рыбы.");
		}
	} else {
		System.out.println("Покупаем 1 кг рыбы.");
	}
} else {
	if(amountOfMoney <750){
      System.out.println("Покупаем курицу.");
    } else {
      System.out.println("Покупаем говядину.");
    }
}

Задание
Переменная isSunny сообщает, что на улице солнечно; isNotCloudy — что нет облаков. Если на улице солнечно или нет облаков, выводится строка "В ближайшие два часа осадков не ожидается". Напиши код с этим условием: используй подходящий логический оператор.
boolean isSunny = true;
boolean isNotCloudy = false;

if (isSunny || isNotCloudy) {
  System.out.println("В ближайшие два часа осадков не ожидается");
}

Задание
Запиши в коде условие: если (есть свободное время или готово домашнее задание) и (есть электричество), можно поиграть в компьютерную игру. Если условие выполняется, должна выводиться строка "Ура, можно поиграть!". Используй условный оператор if и логические операторы.
boolean hasFreeTime = true;
boolean isHomeworkDone = false;
boolean hasElectricity = true;

if ((hasFreeTime || isHomeworkDone) && hasElectricity){
  System.out.println("Ура, можно поиграть!");
}

class Praktikum {
  public static void main(String[] args) {
		Praktikum advice = new Praktikum();
		System.out.println(advice.getAdviceOnProcrastination(1));
	}

	public String getAdviceOnProcrastination(int dice){
		String result = "тут будет храниться совет";

		if (dice == 1) { 
			result = "Полистать мемы";
		}
		else if (dice == 2) { 
			result = "Выпить чашечку чая";
		}
		else if (dice == 3) { 
			result = "Полистать ленту новостей";
		}
		else if (dice == 4) { 
			result = "Пообщаться с уточкой";
		}
		else if (dice == 5) { 
			result = "Устроить small talk";
		}
		else if (dice == 6) { 
			result = "Потыкать в носик котика или пёсика";
		}

		return result;
	}
}

Задача 1. Представь, что ты пишешь ПО для автомобиля. Задача — предупреждать водителя о штрафах. 
Штраф выписывают, если водитель превысил допустимый порог скорости на 20 км/ч или больше. Например, если допустимый порог скорости — 30 км/ч, а автомобиль едет со скоростью 50 км/ч, будет штраф.
Допиши метод, который выводит предупреждение «Вы превысили скорость. Может прийти штраф».   
Методу понадобятся два параметра — порог допустимой скорости и текущая скорость, с которой едет автомобиль.
Пример вызова метода — printSpeedingWarning(40, 65). В решении вызывать метод не нужно: когда ты запустишь код, значения подставятся в тренажёре автоматически.
public void printSpeedingWarning(int speedLimit, int currentSpeed) {
	if (currentSpeed >= speedLimit + 20){
    System.out.println("Вы превысили скорость. Может прийти штраф");
    }
}

Задача 2. Пора усовершенствовать систему предупреждений о штрафах. Нужно сообщать сумму штрафа, который придёт с ближайшей камеры. 
Напиши метод, который выводит на экран предупреждение о штрафе: «Может прийти штраф: <сумма штрафа> рублей!» 
У метода должно быть два параметра: допустимый порог скорости и текущая скорость.
Штрафы в зависимости от превышения скорости:
от 20 включительно до 40 км/ч — 500 рублей,
от 40 включительно до 60 км/ч — 1000 рублей,
от 60 включительно до 80 км/ч — 2500 рублей,
от 80 км/ч включительно и больше — 5000 рублей.
Например, ограничение скорости — 40 км/ч. Текущая скорость — 70 км/ч. Метод должен вывести на экран «Может прийти штраф: 500 рублей!».
public void printSpeedingTicket(int speedLimit, int currentSpeed) {
	int overspeed = currentSpeed - speedLimit;
    if(overspeed >=20 && overspeed < 40) {
  System.out.println("Может прийти штраф: 500 рублей!");
    }
    else if(overspeed >=40 && overspeed < 60) {
  System.out.println("Может прийти штраф: 1000 рублей!");
    }
   else if (overspeed >=60 && overspeed < 80) {
  System.out.println("Может прийти штраф: 2500 рублей!");
   }
    else if (overspeed >= 80){
        System.out.println("Может прийти штраф: 5000 рублей!");
    }
}

Задача 3. Тебе предстоит написать часть программы-автопилота: нужно научить его обрабатывать сигналы светофора. 
Напиши тело метода, который будет давать автомобилю инструкции в зависимости от сигнала светофора. 
На вход в метод поступает цвет светофора в виде строки: например, "жёлтый". Метод должен вернуть инструкцию для автомобиля — тоже в виде строки:
"зелёный" — вернуть строку "можно ехать",
"жёлтый" или "красный" — вернуть строку "стой",
цвет другой — значит, что-то пошло не так. Нужно вернуть строку "перезапросить датчики".
Запиши условия с операторами if-else if и используй команду return, чтобы возвращать разные значения в зависимости от аргумента.
public String processTrafficLightSignal(String color) { 
  if (color == "зелёный"){
      return "можно ехать";
  }
    else if (color == "жёлтый" || color == "красный"){
        return "стой";
    }
    else{
        return "перезапросить датчики";
    }
}

Задание
Ты играешь в компьютерную игру. Удалось набрать 27 баллов, но для приза нужно 30. Допиши условие цикла так, чтобы его результат был такой:
Набрано баллов: 27
Набрано баллов: 28
Набрано баллов: 29
Набрано баллов: 30
public class Praktikum {
    public static void main(String[] args) {
        for (int i = 27; i<=30 ; i = i + 1) { // допиши условие
            System.out.println("Набрано баллов: " + i);
        }
    }
}

Задание
Представь, что у тебя 12 абрикосов. Напиши цикл, в котором ты будешь съедать абрикосы один за другим. Когда абрикосы закончатся, можно возвращаться к учёбе.
public class Praktikum {
  public static void main(String[] args) {
    for (int i = 1; i <= 12; i = i + 1){
    System.out.println(i + "-й абрикос съеден.");
  }
    System.out.println("Абрикосы съедены, можно и снова учиться!"); // Цикл завершён, выполнится эта строка		
  }
}

Ещё пример. Как ты уже знаешь, Анатолий участвует в книжном марафоне: он читает по три главы в день. Можно посчитать, сколько глав прочитает Анатолий за неделю. 
Задача такая — вывести на экран цикл, который отразит, сколько глав Анатолий прочитал к концу каждого из семи дней. Заодно нужно вывести и общее число глав, которые удалось прочитать.
public class Praktikum {
  public static void main(String[] args) {
    int chapterCount = 0; 
    int chapterPerDay = 3;
    for(int day = 1; day <= 7; day = day + 1) { 
      chapterCount = chapterCount + chapterPerDay; 
      System.out.println(day + "-й день прошёл, студент Анатолий прочитал " + chapterCount + " глав.");
    }
    System.out.println("Количество глав за неделю: " + chapterCount + " глава."); // Сколько глав всего будет прочитано за неделю
  }
}

Задача 1. Приближается Новый год. Дед Мороз оказался в маленьком и необычном городке: все дети здесь вели себя хорошо и заслужили подарки. Деду Морозу нужно обойти каждый дом на всех улицах и оставить детям подарки. 
В городе 7 улиц, а на каждой улице по 4 дома. Напиши программу, которая поможет Деду Морозу напечатать номера улиц и домов, куда подарки уже отнесены. Примени вложенные циклы.
Что должна вывести программа: 
Улица 1 дом 1 — подарок получен.
Улица 1 дом 2 — подарок получен.
Улица 1 дом 3 — подарок получен.
Улица 1 дом 4 — подарок получен.
Улица 2 дом 1 — подарок получен.
Улица 2 дом 2 — подарок получен.
Улица 2 дом 3 — подарок получен.
Улица 2 дом 4 — подарок получен.
Улица 3 дом 1 — подарок получен.
...  
public class Praktikum {
  public static void main(String[] args) {

    int streetsNumber = 7; // количество улиц в городе
    int housesNumber = 4; // количество домов на каждой улице

    for(int i = 1; i <= 7; i = i + 1) { 
      for(int j = 1; j <= 4; j = j + 1 ) { 
        System.out.println("Улица " + i + " дом " + j + " — подарок получен.");
      }
    }
  }
}

Задача 2. Напиши программу, которая составит расписание работы врача поликлиники на 30 дней. По нечётным дням врач принимает 5 человек по записи. По чётным дням — 7 человек по «живой» очереди. Используй циклы и условные операторы.
Чтобы узнать, чётный ли день, нужно проверить остаток от его деления на 2. Если число чётное, остаток равен нулю. 
Определить остаток можно с помощью символа %.  Например, остаток выражения 5 % 3 равен двум, а у 4 % 2 — ноль. Для проверки, равен ли остаток нулю, используй оператор ==.
Результат программы должен получиться таким:
День 1
  Пациент по записи: 1
  Пациент по записи: 2
  Пациент по записи: 3
  Пациент по записи: 4
  Пациент по записи: 5
На сегодня всех вылечили
День 2
  Пациент по очереди: 1
  Пациент по очереди: 2
  Пациент по очереди: 3
  Пациент по очереди: 4
  Пациент по очереди: 5
  Пациент по очереди: 6
  Пациент по очереди: 7
На сегодня всех вылечили
...
Какой насыщенный выдался месяц! 
class Praktikum {
  public static void main(String[] args) {     

    int days = 30; // Количество дней
    int queueNumber = 7; // Количество пациентов по очереди
    int appointmentNumber = 5; // Количество пациентов по записи
for (int i = 1; i <= days; i++) { 
    System.out.println("День " + i); // В месяц должно пройти 30 дней
 if (i % 2 == 0) { 
                for (int j = 1; j <= queueNumber; j++) {
    System.out.println("  Пациент по очереди: " + j);
 } 
     System.out.println("На сегодня всех вылечили");
            }
    else { 
                for (int j = 1; j <= appointmentNumber; j++){
    System.out.println("  Пациент по записи: " + j);
} 
    System.out.println("На сегодня всех вылечили");
     }
}
    System.out.println("Какой насыщенный выдался месяц!");
  }
}

Начинается новый теннисный сезон. Чтобы пройти в финальный матч, участнику нужно заработать в турнирах не меньше 1 000 очков. За участие в каждом матче игроку полагается от 0 до 100 очков. 
Допиши программу с циклом while, чтобы узнать, в скольких турнирах нужно принять участие игроку для попадания на итоговый турнир.
Число очков для игрока в каждом матче будет генерироваться случайно.
import java.util.Random;
class Praktikum {
    public static void main(String[] args) {
        Random random = new Random();
        int totalPoints = 0; // Общее количество очков, заработанных во всех турнирах
        int tournaments = 0; // Количество турниров, необходимое для набора нужного числа очков

        while (totalPoints < 1000) {
            totalPoints = totalPoints + random.nextInt(101);;
            tournaments = tournaments + 1;
        }
        System.out.println("Игроку нужно принять участие в " + tournaments + " турнирах");
    }
}
Результат: Игроку нужно принять участие в 18 турнирах

Задача 1. Пользователь задаёт переменной numberToGenerate значение — целое число до 100. Программа должна его отгадать. Она делает это путём перебора случайных целых чисел. 
Если программа выдала случайное число, а оно не совпадает с загаданным, попытки будут повторяться в бесконечном цикле. Счётчик попыток увеличится. 
Если число подходящее, программа выводит количество попыток и завершает цикл с помощью break. 
import java.util.Random;

public class Praktikum {
    public static void main(String[] args) {

				int numberToGenerate = 10; // переменная для ввода числа
        int tryCount = 1; // переменная для подсчета количества попыток
        Random random = new Random();

        while (true) {
            if (numberToGenerate == random.nextInt(100)) {
                System.out.println("Потребовалось попыток: " + tryCount);
                break;
            } else {
                tryCount++;
            }
        }
    }
}

Задача 2. Бесконечный цикл while (true) с прерыванием break применяется не так часто. Обычно его удобнее заменить на цикл while с условием. Потренируйся это делать. 
Студенту нужно прочитать 30 учебников. Программа с бесконечным циклом уменьшает количество оставшихся книг на один каждый проход. Она работает до тех пор, пока не останется 0 книг. 
Перепиши код: замени бесконечный цикл на цикл while с условием.
class Praktikum {
    public static void main(String[] args) {
        int booksCount = 30;

        while (booksCount!= 0) {
           
            booksCount--;// уменьшает количество на 1
            System.out.println("Осталось прочитать книг: " + booksCount);
        }
    }
}

Задача 3. Кассовый аппарат в ресторане забарахлил и стал бесконечно выдавать чеки. 
Чтобы прервать этот процесс, шеф-повару нужно ввести секретный код. Это случайное число от 0 до 50. 
Код автоматически обновляется после выдачи каждого чека. Если шеф-повар не угадал, в следующую попытку код будет уже другим. Повару остаётся только продолжать угадывать. 
Допиши программу: когда повар угадает код, кассовый аппарат перестанет печатать чеки.
Результат работы программы должен быть таким:
Печатаю новый чек!
Печатаю новый чек!
Печатаю новый чек!
Печатаю новый чек!
...
Шеф угадал число! Прекращаю печать! 
import java.util.Random;

class Praktikum {
    public static void main(String[] args) {
        Random random = new Random(); // Генерирует случайное число
        int secretCode;
        int cookInput;
				
        while(true){
        secretCode = random.nextInt(50); // Здесь задаётся код - случайное число от 0 до 50
        System.out.println("Печатаю новый чек!");
        cookInput = random.nextInt(50); // Повар пытается угадать код
        
        if (secretCode == cookInput) { // Если повар угадал код, цикл должен завершиться
            System.out.println("Шеф угадал число! Прекращаю печать!");
           break;}
        }
        
    }
}

Задание
В вазе лежат разные фрукты: их количество записали в семи отдельных переменных. Собери все значения в один массив с именем fruitBowl (англ. «ваза для фруктов»). Не забудь, что тип данных массива должен соответствовать содержанию.
class Praktikum {
  public static void main(String[] args) {
 int[] fruitBowl = { 3, 5, 4, 0, 3, 6, 1};
  }
}

Задача 1. Перед тобой массив, с данными о том, сколько воды выпил один человек за неделю — в мл. Каждый элемент — это выпитая вода за один день. Что нужно сделать:
Исправь количество выпитой воды за пятницу: туда забыли дописать стакан воды в 200 мл. Прибавь этот объём к текущему значению.
Высчитай среднее потребление воды в день. Сложи все значения и подели на количество дней. Результат сохрани в переменную avgConsumption (англ. — average consumption, «среднее потребление»).
class Praktikum {
  public static void main(String[] args) {
    int[] waterConsumption = {1500, 1800, 2000, 1600, 1500, 1500, 1800};
    
    System.out.println("Новое значение выпитой воды за пятницу: " +( waterConsumption [4] + 200) + " мл");

    // Высчитай среднее потребление воды за неделю
  int  avgConsumption = (waterConsumption[0] + waterConsumption[1] + waterConsumption[2] + waterConsumption[3] + (waterConsumption[4] + 200) + waterConsumption[5] + waterConsumption[6])/7 ;
    System.out.println("В среднем вы выпивали: " + avgConsumption + " мл в день");
  }
}

Задача 2. Представь: ты идёшь в магазин со списком покупок. Некоторые продукты из списка раскупили: пришлось искать замену. А ещё в магазине поменяли расположение отделов. При этом список составлен так, чтобы купить всё по порядку.
Нужно объявить массив покупок и изменить его: поменять местами хлеб и мясо, а вместо пекинской капусты купить обычную белокочанную капусту. Напечатай изменения, примени порядковые номера в списке.
class Praktikum {
  public static void main(String[] args) {
    // На месте многоточия объяви массив shopping
   String[] shopping= {"Яйца",
           "Хлеб",
           "Огурцы",
           "Пекинская капуста",
           "Мясо",
           "Молоко",
           "Что-нибудь к чаю"
    };
    String swap = shopping[1];
    shopping[1] = shopping[4]; 
    shopping[4] = swap; 
  shopping[3] = "Белокочанная капуста";
    System.out.println("Изменения:");
    System.out.println("2. " + shopping[1]);
    System.out.println("4. " + shopping[3]);
    System.out.println("5. " + shopping[4]);

  }
}

Задание
Ещё раз поработай со списком, в котором есть данные, сколько один человек пьёт воды. Создай пустой массив с именем waterConsumption: в нём должно быть место для трёх элементов. 
Задай значения: пусть первый раз человек выпил 200 мл воды, второй — 400 мл, а третий — 150. Используй тип данных int. Выведи на экран значения массива.
class Praktikum {
  public static void main(String[] args) {
    int[] waterConsumption = new int[3];// Создай массив
    
    // Задай значение элементов массива
    waterConsumption[0] = 200;
    waterConsumption[1] = 400;
    waterConsumption[2] = 150;

    System.out.println (waterConsumption[0]);
    System.out.println (waterConsumption[1]);
    System.out.println (waterConsumption[2]);// Выведи на экран значения массива
  }
}

У всех объектов есть свойства: у красок — цвет, у автомобилей — мощность, у котов — вредность и пушистость. У массива свойство — длина, length. Как ты уже знаешь, это то, сколько в нём элементов. 
Если обратиться к нему, узнаешь размер массива: имя_массива.length. 
Например, надо узнать размер массива buttons:
class Praktikum {
  public static void main(String[] args) {
    String[] buttons = {"Купить", "Снять", "Посуточно", "Новостройки", "1", "2", "3", "4+"};
    int buttonsCount; // В этой переменной будет храниться размер массива buttons
    buttonsCount = buttons.length; // Обращаемся к свойству length через имя массива и точку

    System.out.println("Сколько кнопок на веб-странице?");
    System.out.println(buttonsCount); // Печатаем результат
  }
}
