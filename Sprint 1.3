Задача 1. Приближается Новый год. Дед Мороз оказался в маленьком и необычном городке: все дети здесь вели себя хорошо и заслужили подарки. Деду Морозу нужно обойти каждый дом на всех улицах и оставить детям подарки. 
В городе 7 улиц, а на каждой улице по 4 дома. Напиши программу, которая поможет Деду Морозу напечатать номера улиц и домов, куда подарки уже отнесены. Примени вложенные циклы.
Что должна вывести программа: 
Улица 1 дом 1 — подарок получен.
Улица 1 дом 2 — подарок получен.
Улица 1 дом 3 — подарок получен.
Улица 1 дом 4 — подарок получен.
Улица 2 дом 1 — подарок получен.
Улица 2 дом 2 — подарок получен.
Улица 2 дом 3 — подарок получен.
Улица 2 дом 4 — подарок получен.
Улица 3 дом 1 — подарок получен.
...  
public class Praktikum {
  public static void main(String[] args) {

    int streetsNumber = 7; // количество улиц в городе
    int housesNumber = 4; // количество домов на каждой улице

    for(int i = 1; i <= 7; i = i + 1) { 
      for(int j = 1; j <= 4; j = j + 1 ) { 
        System.out.println("Улица " + i + " дом " + j + " — подарок получен.");
      }
    }
  }
}

Задача 2. Напиши программу, которая составит расписание работы врача поликлиники на 30 дней. По нечётным дням врач принимает 5 человек по записи. По чётным дням — 7 человек по «живой» очереди. Используй циклы и условные операторы.
Чтобы узнать, чётный ли день, нужно проверить остаток от его деления на 2. Если число чётное, остаток равен нулю. 
Определить остаток можно с помощью символа %.  Например, остаток выражения 5 % 3 равен двум, а у 4 % 2 — ноль. Для проверки, равен ли остаток нулю, используй оператор ==.
Результат программы должен получиться таким:
День 1
  Пациент по записи: 1
  Пациент по записи: 2
  Пациент по записи: 3
  Пациент по записи: 4
  Пациент по записи: 5
На сегодня всех вылечили
День 2
  Пациент по очереди: 1
  Пациент по очереди: 2
  Пациент по очереди: 3
  Пациент по очереди: 4
  Пациент по очереди: 5
  Пациент по очереди: 6
  Пациент по очереди: 7
На сегодня всех вылечили
...
Какой насыщенный выдался месяц! 
class Praktikum {
  public static void main(String[] args) {     

    int days = 30; // Количество дней
    int queueNumber = 7; // Количество пациентов по очереди
    int appointmentNumber = 5; // Количество пациентов по записи
for (int i = 1; i <= days; i++) { 
    System.out.println("День " + i); // В месяц должно пройти 30 дней
 if (i % 2 == 0) { 
                for (int j = 1; j <= queueNumber; j++) {
    System.out.println("  Пациент по очереди: " + j);
 } 
     System.out.println("На сегодня всех вылечили");
            }
    else { 
                for (int j = 1; j <= appointmentNumber; j++){
    System.out.println("  Пациент по записи: " + j);
} 
    System.out.println("На сегодня всех вылечили");
     }
}
    System.out.println("Какой насыщенный выдался месяц!");
  }
}

Начинается новый теннисный сезон. Чтобы пройти в финальный матч, участнику нужно заработать в турнирах не меньше 1 000 очков. За участие в каждом матче игроку полагается от 0 до 100 очков. 
Допиши программу с циклом while, чтобы узнать, в скольких турнирах нужно принять участие игроку для попадания на итоговый турнир.
Число очков для игрока в каждом матче будет генерироваться случайно.
import java.util.Random;
class Praktikum {
    public static void main(String[] args) {
        Random random = new Random();
        int totalPoints = 0; // Общее количество очков, заработанных во всех турнирах
        int tournaments = 0; // Количество турниров, необходимое для набора нужного числа очков

        while (totalPoints < 1000) {
            totalPoints = totalPoints + random.nextInt(101);;
            tournaments = tournaments + 1;
        }
        System.out.println("Игроку нужно принять участие в " + tournaments + " турнирах");
    }
}
Результат: Игроку нужно принять участие в 18 турнирах

Задача 1. Пользователь задаёт переменной numberToGenerate значение — целое число до 100. Программа должна его отгадать. Она делает это путём перебора случайных целых чисел. 
Если программа выдала случайное число, а оно не совпадает с загаданным, попытки будут повторяться в бесконечном цикле. Счётчик попыток увеличится. 
Если число подходящее, программа выводит количество попыток и завершает цикл с помощью break. 
import java.util.Random;

public class Praktikum {
    public static void main(String[] args) {

				int numberToGenerate = 10; // переменная для ввода числа
        int tryCount = 1; // переменная для подсчета количества попыток
        Random random = new Random();

        while (true) {
            if (numberToGenerate == random.nextInt(100)) {
                System.out.println("Потребовалось попыток: " + tryCount);
                break;
            } else {
                tryCount++;
            }
        }
    }
}

Задача 2. Бесконечный цикл while (true) с прерыванием break применяется не так часто. Обычно его удобнее заменить на цикл while с условием. Потренируйся это делать. 
Студенту нужно прочитать 30 учебников. Программа с бесконечным циклом уменьшает количество оставшихся книг на один каждый проход. Она работает до тех пор, пока не останется 0 книг. 
Перепиши код: замени бесконечный цикл на цикл while с условием.
class Praktikum {
    public static void main(String[] args) {
        int booksCount = 30;

        while (booksCount!= 0) {
           
            booksCount--;// уменьшает количество на 1
            System.out.println("Осталось прочитать книг: " + booksCount);
        }
    }
}

Задача 3. Кассовый аппарат в ресторане забарахлил и стал бесконечно выдавать чеки. 
Чтобы прервать этот процесс, шеф-повару нужно ввести секретный код. Это случайное число от 0 до 50. 
Код автоматически обновляется после выдачи каждого чека. Если шеф-повар не угадал, в следующую попытку код будет уже другим. Повару остаётся только продолжать угадывать. 
Допиши программу: когда повар угадает код, кассовый аппарат перестанет печатать чеки.
Результат работы программы должен быть таким:
Печатаю новый чек!
Печатаю новый чек!
Печатаю новый чек!
Печатаю новый чек!
...
Шеф угадал число! Прекращаю печать! 
import java.util.Random;

class Praktikum {
    public static void main(String[] args) {
        Random random = new Random(); // Генерирует случайное число
        int secretCode;
        int cookInput;
				
        while(true){
        secretCode = random.nextInt(50); // Здесь задаётся код - случайное число от 0 до 50
        System.out.println("Печатаю новый чек!");
        cookInput = random.nextInt(50); // Повар пытается угадать код
        
        if (secretCode == cookInput) { // Если повар угадал код, цикл должен завершиться
            System.out.println("Шеф угадал число! Прекращаю печать!");
           break;}
        }
        
    }
}

Задание
В вазе лежат разные фрукты: их количество записали в семи отдельных переменных. Собери все значения в один массив с именем fruitBowl (англ. «ваза для фруктов»). Не забудь, что тип данных массива должен соответствовать содержанию.
class Praktikum {
  public static void main(String[] args) {
 int[] fruitBowl = { 3, 5, 4, 0, 3, 6, 1};
  }
}

Задача 1. Перед тобой массив, с данными о том, сколько воды выпил один человек за неделю — в мл. Каждый элемент — это выпитая вода за один день. Что нужно сделать:
Исправь количество выпитой воды за пятницу: туда забыли дописать стакан воды в 200 мл. Прибавь этот объём к текущему значению.
Высчитай среднее потребление воды в день. Сложи все значения и подели на количество дней. Результат сохрани в переменную avgConsumption (англ. — average consumption, «среднее потребление»).
class Praktikum {
  public static void main(String[] args) {
    int[] waterConsumption = {1500, 1800, 2000, 1600, 1500, 1500, 1800};
    
    System.out.println("Новое значение выпитой воды за пятницу: " +( waterConsumption [4] + 200) + " мл");

    // Высчитай среднее потребление воды за неделю
  int  avgConsumption = (waterConsumption[0] + waterConsumption[1] + waterConsumption[2] + waterConsumption[3] + (waterConsumption[4] + 200) + waterConsumption[5] + waterConsumption[6])/7 ;
    System.out.println("В среднем вы выпивали: " + avgConsumption + " мл в день");
  }
}

Задача 2. Представь: ты идёшь в магазин со списком покупок. Некоторые продукты из списка раскупили: пришлось искать замену. А ещё в магазине поменяли расположение отделов. При этом список составлен так, чтобы купить всё по порядку.
Нужно объявить массив покупок и изменить его: поменять местами хлеб и мясо, а вместо пекинской капусты купить обычную белокочанную капусту. Напечатай изменения, примени порядковые номера в списке.
class Praktikum {
  public static void main(String[] args) {
    // На месте многоточия объяви массив shopping
   String[] shopping= {"Яйца",
           "Хлеб",
           "Огурцы",
           "Пекинская капуста",
           "Мясо",
           "Молоко",
           "Что-нибудь к чаю"
    };
    String swap = shopping[1];
    shopping[1] = shopping[4]; 
    shopping[4] = swap; 
  shopping[3] = "Белокочанная капуста";
    System.out.println("Изменения:");
    System.out.println("2. " + shopping[1]);
    System.out.println("4. " + shopping[3]);
    System.out.println("5. " + shopping[4]);

  }
}

Задание
Ещё раз поработай со списком, в котором есть данные, сколько один человек пьёт воды. Создай пустой массив с именем waterConsumption: в нём должно быть место для трёх элементов. 
Задай значения: пусть первый раз человек выпил 200 мл воды, второй — 400 мл, а третий — 150. Используй тип данных int. Выведи на экран значения массива.
class Praktikum {
  public static void main(String[] args) {
    int[] waterConsumption = new int[3];// Создай массив
    
    // Задай значение элементов массива
    waterConsumption[0] = 200;
    waterConsumption[1] = 400;
    waterConsumption[2] = 150;

    System.out.println (waterConsumption[0]);
    System.out.println (waterConsumption[1]);
    System.out.println (waterConsumption[2]);// Выведи на экран значения массива
  }
}

У всех объектов есть свойства: у красок — цвет, у автомобилей — мощность, у котов — вредность и пушистость. У массива свойство — длина, length. Как ты уже знаешь, это то, сколько в нём элементов. 
Если обратиться к нему, узнаешь размер массива: имя_массива.length. 
Например, надо узнать размер массива buttons:
class Praktikum {
  public static void main(String[] args) {
    String[] buttons = {"Купить", "Снять", "Посуточно", "Новостройки", "1", "2", "3", "4+"};
    int buttonsCount; // В этой переменной будет храниться размер массива buttons
    buttonsCount = buttons.length; // Обращаемся к свойству length через имя массива и точку

    System.out.println("Сколько кнопок на веб-странице?");
    System.out.println(buttonsCount); // Печатаем результат
  }
}

